# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on: [push, pull_request]

env:
  TEST_PYTHON_VERSION: 3.9
  TEST_OS: 'ubuntu-20.04'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2022, macOS-13]
        python-version: [3.6, 3.7, 3.8, 3.9, 3.10.0, 3.11.0, 3.12.0]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Installation
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: First test
      run: |
        python -m pycm test
        python -m pycm
    - name: Test requirements Installation
      run: |
        python Otherfiles/requirements-splitter.py
        pip install --upgrade --upgrade-strategy=only-if-needed -r test-requirements.txt
    - name: Test with pytest (Basic)
      run: |
        python -m pytest --cov=pycm --cov-report=term --ignore-glob=Test/plot_test.py
    - name: Plot requirements Installation
      run: |
        pip install --upgrade --upgrade-strategy=only-if-needed -r plot-requirements.txt
    - name: Test with pytest (+Plot)
      run: |
        python -m pytest --cov=pycm --cov-report=term --ignore-glob=Test/plot_error_test.py
    - name: Version check
      run: |
        python Otherfiles/version_check.py
      if: matrix.python-version == env.TEST_PYTHON_VERSION
    - name: Notebook check
      run: |
        pip install notebook>=5.2.2
        python Otherfiles/notebook_check.py
      if: matrix.python-version == env.TEST_PYTHON_VERSION && matrix.os == env.TEST_OS
    - name: Other tests
      run: |
          python -m vulture pycm/ Otherfiles/ setup.py --min-confidence 65 --exclude=__init__.py --sort-by-size
          python -m bandit -r pycm -s B311
          python -m pydocstyle -v --match-dir=pycm
      if: matrix.python-version == env.TEST_PYTHON_VERSION
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
      if: matrix.python-version == env.TEST_PYTHON_VERSION && matrix.os == env.TEST_OS
    - name: cProfile
      run: |
          python -m cProfile -s cumtime pycm/pycm_profile.py
